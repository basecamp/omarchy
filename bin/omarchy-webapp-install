#!/bin/bash

set -euo pipefail

if [ "$#" -lt 3 ]; then
  echo -e "\e[32mCreate a shortcut for your web app.\n\e[0m"

  APP_NAME=$(gum input --prompt "Name> " --placeholder "My favorite web app")
  APP_URL=$(gum input --prompt "URL> " --placeholder "https://example.com")
  ICON_REF=$(gum input --prompt "Icon URL> " --placeholder "See https://dashboardicons.com (must use PNG!)")
  CUSTOM_EXEC=""
  MIME_TYPES=""
  INTERACTIVE_MODE=true
else
  APP_NAME="$1"
  APP_URL="$2"
  ICON_REF="$3"
  CUSTOM_EXEC="$4" # Optional custom exec command
  MIME_TYPES="$5"  # Optional mime types
  INTERACTIVE_MODE=false
fi

# Ensure valid execution
if [[ -z "$APP_NAME" || -z "$APP_URL" || -z "$ICON_REF" ]]; then
  echo "You must set app name, app URL, and icon URL!"
  exit 1
fi

declare -A BROWSER_BINARIES=(
  [Chromium]=chromium
  [Google Chrome]=google-chrome-stable
  [Brave]=brave
  [Microsoft Edge]=microsoft-edge-stable
  [Vivaldi]=vivaldi
  [Helium]=helium-browser
)

BROWSERS=()
for name in "${!BROWSER_BINARIES[@]}"; do
  if command -v "${BROWSER_BINARIES[$name]}" >/dev/null 2>&1; then
    BROWSERS+=("$name")
  fi
done

BROWSER_CHOICE=$(gum choose --header "Which browser?" "${BROWSERS[@]}")
BROWSER_BIN="${BROWSER_BINARIES[$BROWSER_CHOICE]}"

declare -A BROWSER_CONFIG_DIRS=(
  [Chromium]="$HOME/.config/chromium"
  [Google Chrome]="$HOME/.config/google-chrome"
  [Brave]="$HOME/.config/BraveSoftware/Brave-Browser"
  [Microsoft Edge]="$HOME/.config/microsoft-edge"
  [Vivaldi]="$HOME/.config/vivaldi"
  [Helium]="$HOME/.config/net.imput.helium"
)

 PROFILE_DIR="${BROWSER_CONFIG_DIRS[$BROWSER_CHOICE]:-$HOME/.config/$BROWSER_CHOICE}"

declare -A PROFILE_MAP
PROFILES=()

if [ -f "$PROFILE_DIR/Local State" ]; then
  mapfile -t profile_data < <(jq -r '.profile.info_cache | to_entries[] | "\(.key)|\(.value.name)"' \
    "$PROFILE_DIR/Local State" 2>/dev/null || true)
  for line in "${profile_data[@]}"; do
    IFS='|' read -r folder name <<<"$line"
    PROFILES+=("$name")
    PROFILE_MAP["$name"]="$folder"
  done
elif [ -d "$PROFILE_DIR" ]; then
  for d in "$PROFILE_DIR"/Profile*; do
    [[ -d "$d" ]] || continue
    bn=$(basename "$d")
    PROFILES+=("$bn")
    PROFILE_MAP["$bn"]="$bn"
  done
fi

if [ ${#PROFILES[@]} -eq 0 ]; then
  echo "No browser profiles found in '$PROFILE_DIR'. Aborting." >&2
  exit 1
fi

if [ ${#PROFILES[@]} -eq 1 ]; then
  APP_PROFILE_NAME="${PROFILES[0]}"
else
  APP_PROFILE_NAME=$(gum choose --header "Select browser profile" "${PROFILES[@]}")
fi

# Refer to local icon or fetch remotely from URL
ICON_DIR="$HOME/.local/share/applications/icons"
if [[ $ICON_REF =~ ^https?:// ]]; then
  ICON_PATH="$ICON_DIR/$APP_NAME.png"
  if curl -sL -o "$ICON_PATH" "$ICON_REF"; then
    ICON_PATH="$ICON_DIR/$APP_NAME.png"
  else
    echo "Error: Failed to download icon."
    exit 1
  fi
else
  ICON_PATH="$ICON_DIR/$ICON_REF"
fi

# Use custom exec if provided, otherwise default behavior
if [[ -n $CUSTOM_EXEC ]]; then
  EXEC_COMMAND="$CUSTOM_EXEC"
else
  EXEC_COMMAND="omarchy-launch-webapp \"$APP_URL\" \"${PROFILE_MAP[$APP_PROFILE_NAME]}\" \"$BROWSER_BIN\""
fi

# Create application .desktop file
DESKTOP_FILE="$HOME/.local/share/applications/$APP_NAME.desktop"

cat >"$DESKTOP_FILE" <<EOF
[Desktop Entry]
Version=1.0
Name=$APP_NAME
Comment=$APP_NAME
Exec=$EXEC_COMMAND
Terminal=false
Type=Application
Icon=$ICON_PATH
StartupNotify=true
EOF

# Add mime types if provided
if [[ -n $MIME_TYPES ]]; then
  echo "MimeType=$MIME_TYPES" >>"$DESKTOP_FILE"
fi

chmod +x "$DESKTOP_FILE"

if [[ $INTERACTIVE_MODE == true ]]; then
  echo -e "You can now find $APP_NAME using the app launcher (SUPER + SPACE)\n"
fi
