#!/bin/bash

# Designed to be run by systemd timer every 30 seconds and alerts if battery is low

BATTERY_THRESHOLD=10
NOTIFICATION_FLAG="/run/user/$UID/omarchy_battery_notified"

get_battery_percentages() {
  local batteries=($(upower -e | grep 'BAT'))
  local min_percent=101  # Start higher than 100 to ensure update if discharging found
  local discharging_found=false

  for bat in "${batteries[@]}"; do
    local percent=$(upower -i "$bat" | awk -F: '/percentage/ {
        gsub(/[%[:space:]]/, "", $2);
        val=$2;
        printf("%d\n", (val+0.5))
      }')
    local state=$(upower -i "$bat" | grep -E "state" | awk '{print $2}')

    if [[ "$state" == "discharging" && "$percent" -lt "$min_percent" ]]; then
      min_percent="$percent"
      discharging_found=true
    fi
  done

  if [[ "$discharging_found" == true ]]; then
    echo "$min_percent"
  else
    echo "999"  # High value to skip alert
  fi
}

send_notification() {
  notify-send -u critical "Û±êã Time to recharge!" "Battery is down to ${1}%" -i battery-caution -t 30000
}

BATTERY_LEVEL=$(get_battery_percentages)

if [[ "$BATTERY_LEVEL" -le "$BATTERY_THRESHOLD" ]]; then
  if [[ ! -f "$NOTIFICATION_FLAG" ]]; then
    send_notification "$BATTERY_LEVEL"
    touch "$NOTIFICATION_FLAG"
  fi
else
  rm -f "$NOTIFICATION_FLAG"
fi