#!/bin/bash

if ! command -v mise &> /dev/null; then
  echo "mise is not installed or not in PATH"
  exit 1
fi

installed_json=$(mise ls --installed --json)
if [[ -z "$installed_json" || "$installed_json" == "{}" ]]; then
  echo "No mise tools installed."
  exit 0
fi

mapfile -t entries < <(printf '%s' "$installed_json" | jq -r 'to_entries[] | .key as $tool | .value[] | select(.version != null) | "\($tool)@\(.version)"' )
if [[ ${#entries[@]} -eq 0 ]]; then
  echo "No mise tools installed."
  exit 0
fi

if command -v gum &> /dev/null; then
  selection=$(gum choose --no-limit --header "Select mise tools to uninstall (SPACE to select, ENTER to confirm)..." --selected-prefix="✗ " "${entries[@]}")
else
  selection=$(printf '%s\n' "${entries[@]}" | fzf --multi --prompt="mise » " --header="Select mise tools to uninstall (TAB to select, ENTER to confirm)" --preview="echo {}" --color 'pointer:red,marker:red')
fi

selected_entries=()
while IFS= read -r line; do
  [[ -n "$line" ]] && selected_entries+=("$line")
done <<< "$selection"

if [[ ${#selected_entries[@]} -eq 0 ]]; then
  exit 0
fi

for entry in "${selected_entries[@]}"; do
  tool_only="${entry%@*}"
  mise unuse --global --yes "$tool_only" 2>&1
  if [[ $? -eq 0 ]]; then
    echo "Removed: $entry"
  else
    echo "Failed to remove: $entry"
  fi
done