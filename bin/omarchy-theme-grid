#!/bin/bash

# Launch Walker with theme grid configuration
# Dynamically calculates window size based on screen resolution

export PATH="$HOME/.local/share/omarchy/bin:$PATH"

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
WALKER_THEME_DIR="$HOME/.local/share/omarchy/default/walker/themes"

# Get screen dimensions and scale factor
SCREEN_INFO=$(xrandr | grep -w connected | head -1)
SCREEN_WIDTH=$(echo "$SCREEN_INFO" | grep -oP '\d+x\d+' | cut -d'x' -f1)
SCREEN_HEIGHT=$(echo "$SCREEN_INFO" | grep -oP '\d+x\d+' | cut -d'x' -f2)

# Get scale factor (default to 1 if not set)
SCALE_FACTOR=${GDK_SCALE:-1}
if [[ -z "$SCALE_FACTOR" || "$SCALE_FACTOR" == "1" ]]; then
    # Try to get from Hyprland if available
    SCALE_FACTOR=$(hyprctl monitors -j 2>/dev/null | jq -r '.[0].scale' 2>/dev/null || echo "1")
fi
SCALE_FACTOR=${SCALE_FACTOR%.*}  # Convert to integer if decimal

# Adjust for scale factor
EFFECTIVE_WIDTH=$((SCREEN_WIDTH / SCALE_FACTOR))
EFFECTIVE_HEIGHT=$((SCREEN_HEIGHT / SCALE_FACTOR))

WINDOW_WIDTH=$((EFFECTIVE_WIDTH * 70 / 100))
WINDOW_HEIGHT=$((EFFECTIVE_HEIGHT * 70 / 100))

ITEM_WIDTH=$((WINDOW_WIDTH * 30 / 100))

# For 3 rows to fit with margins, calculate height dynamically
# Account for: 3 tiles + gaps between them + some padding
# Roughly: (window_height - margins) / 3
ITEM_HEIGHT=$((WINDOW_HEIGHT * 31 / 100))

ICON_SIZE=$ITEM_WIDTH

# Generate temporary theme file
THEME_NAME="grid-dynamic-$$"
THEME_FILE="/tmp/walker-theme-$THEME_NAME.toml"

cat > "$THEME_FILE" << EOF
# Dynamically generated theme for grid layout

[activation_mode]
disabled = true

[ui.window.box.search]
hide = true

[ui.window.box.scroll.list]
grid = true

[ui.window.box.scroll.list.item]
width = $ITEM_WIDTH
max_width = $ITEM_WIDTH
min_width = $ITEM_WIDTH
height = $ITEM_HEIGHT
max_height = $ITEM_HEIGHT
min_height = $ITEM_HEIGHT
orientation = "vertical"
spacing = 0

[ui.window.box.scroll.list.item.icon]
pixel_size = -1
hide = false
vexpand = true
hexpand = true
width = $ITEM_WIDTH
height = $ITEM_HEIGHT

[ui.window.box.scroll.list.item.text]
hide = false
h_align = "center"
v_align = "center"
hexpand = true
margin_top = 4

[ui.window.box.scroll.list.item.sub]
hide = true

[ui.window.box.scroll.list.item.activation_label]
hide = true
EOF

# Create symlinks in Walker's theme directory
ln -sf "$THEME_FILE" "$WALKER_THEME_DIR/$THEME_NAME.toml"
ln -sf "$WALKER_THEME_DIR/theme-grid.css" "$WALKER_THEME_DIR/$THEME_NAME.css"

current_theme=$(omarchy-theme-current)
INPUT_FILE=$(mktemp)

  # Create input for Walker dmenu mode
  for theme_path in ~/.config/omarchy/themes/*; do
      if [[ -d "$theme_path" || -L "$theme_path" ]]; then
          theme_name=$(basename "$theme_path")
          display_name=$(echo "$theme_name" | sed -E 's/(^|-)([a-z])/\1\u\2/g; s/-/ /g')

          # Follow symlinks to get the actual theme directory
          if [[ -L "$theme_path" ]]; then
              actual_path=$(readlink -f "$theme_path")
          else
              actual_path="$theme_path"
          fi

          # Find preview image
          preview_image="$actual_path/thumbnail.jpg"

          # Output with image path for Walker - use unit separator
          if [[ -n "$preview_image" ]]; then
              printf "%s\x1f%s\n" "$display_name" "$preview_image" >> "$INPUT_FILE"
          else
              echo "$display_name" >> "$INPUT_FILE"
          fi
      fi
  done

  selected=$(cat "$INPUT_FILE" | walker --dmenu --theme "$THEME_NAME" -w "$WINDOW_WIDTH" -h "$WINDOW_HEIGHT" -p "Select Theme" -i 2 -t $'\x1f')

# Extract theme name and apply if selected
if [[ -n "$selected" && "$selected" != "CNCLD" ]]; then
    # Convert display name back to theme name
    theme_name=$(echo "$selected" | sed -E 's/ /-/g; s/([A-Z])/\L\1/g')

    # Check if this theme exists
    if [[ -d "$HOME/.config/omarchy/themes/$theme_name" || -L "$HOME/.config/omarchy/themes/$theme_name" ]]; then
        omarchy-theme-set "$theme_name"
    fi
fi

# Clean up
rm -f "$INPUT_FILE" "$THEME_FILE"
rm -f "$WALKER_THEME_DIR/$THEME_NAME.toml"
rm -f "$WALKER_THEME_DIR/$THEME_NAME.css"
