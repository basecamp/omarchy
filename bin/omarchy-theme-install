#!/bin/bash

# omarchy-theme-install: Install a new theme from a git repo for Omarchy 
# Usage: omarchy-theme-install <git-repo-url>

REPO_URL="$1"
THEMES_SRC_DIR="$HOME/.local/share/omarchy/themes"
THEMES_LINK_DIR="$HOME/.config/omarchy/themes"
THEME_NAME=$(basename "$REPO_URL" .git)
THEME_SRC_PATH="$THEMES_SRC_DIR/$THEME_NAME"
THEME_LINK_PATH="$THEMES_LINK_DIR/$THEME_NAME"
BACKGROUND_DIR="$HOME/.config/omarchy/backgrounds"
FONTS_DIR="$HOME/.config/omarchy/fonts"
CURRENT_DIR="$HOME/.config/omarchy/current"

set -e

if [ -z "$1" ]; then
  echo "Usage: omarchy-theme-install <git-repo-url>"
  exit 1
fi

# Ensure theme directories exist
mkdir -p "$THEMES_SRC_DIR" "$THEMES_LINK_DIR" "$BACKGROUND_DIR" "$CURRENT_DIR"

# Remove existing theme if present
if [ -d "$THEME_SRC_PATH" ]; then
  echo "Theme '$THEME_NAME' already exists in $THEMES_SRC_DIR. Removing old version..."
  rm -rf "$THEME_SRC_PATH"
fi
if [ -L "$THEME_LINK_PATH" ]; then
  rm -f "$THEME_LINK_PATH"
fi

# Clone the repo
if ! git clone "$REPO_URL" "$THEME_SRC_PATH"; then
  echo "Failed to clone theme repo."
  exit 1
fi

# Create symlink in ~/.config/omarchy/themes
ln -nsf "$THEME_SRC_PATH" "$THEME_LINK_PATH"

# Copy backgrounds if present
if [ -d "$THEME_SRC_PATH/backgrounds" ]; then
  DEST_BG="$BACKGROUND_DIR/$THEME_NAME"
  rm -rf "$DEST_BG"
  mkdir -p "$DEST_BG"
  cp -r "$THEME_SRC_PATH/backgrounds/." "$DEST_BG/"
  echo "Copied backgrounds for $THEME_NAME."
fi

# Copy fonts if present
if [ -d "$THEME_SRC_PATH/fonts" ]; then
  DEST_FONTS="$FONTS_DIR/$THEME_NAME"
  rm -rf "$DEST_FONTS"
  mkdir -p "$DEST_FONTS"
  cp -r "$THEME_SRC_PATH/fonts/." "$DEST_FONTS/"
  echo "Copied fonts for $THEME_NAME."
  
  # Install fonts to system font directory
  USER_FONT_DIR="$HOME/.local/share/fonts"
  mkdir -p "$USER_FONT_DIR"
  
  # Copy fonts to system font directory
  cp -r "$THEME_SRC_PATH/fonts/." "$USER_FONT_DIR/"
  echo "Installed fonts to system font directory: $USER_FONT_DIR"
  
  # Update font cache
  if command -v fc-cache >/dev/null 2>&1; then
    echo "Updating font cache..."
    fc-cache -f -v "$USER_FONT_DIR" 2>/dev/null || true
  fi
fi

# Set as current theme (update symlinks)
ln -nsf "$THEME_LINK_PATH" "$CURRENT_DIR/theme"
ln -nsf "$BACKGROUND_DIR/$THEME_NAME" "$CURRENT_DIR/backgrounds"

# Check for backgrounds and set the first as current, or warn if none
FIRST_BG=$(find "$BACKGROUND_DIR/$THEME_NAME" -type f | sort | head -n 1)
if [ -n "$FIRST_BG" ]; then
  ln -nsf "$FIRST_BG" "$CURRENT_DIR/background"
  # Use swaybg-next to set the background if available
  if command -v swaybg-next >/dev/null 2>&1; then
    swaybg-next
  elif [ -x "$HOME/.local/share/omarchy/bin/swaybg-next" ]; then
    "$HOME/.local/share/omarchy/bin/swaybg-next"
  fi
fi

# Reload waybar, mako, hyprland if available
echo "Restarting applications to apply font changes..."
pkill -SIGUSR2 waybar 2>/dev/null || true
makoctl reload 2>/dev/null || true
hyprctl reload 2>/dev/null || true

# Restart mako notification daemon if it's running (for font changes)
if pgrep mako >/dev/null 2>&1; then
  echo "Restarting mako notification daemon for font changes..."
  pkill mako 2>/dev/null || true
  sleep 1
  mako >/dev/null 2>&1 &
fi

# Touch alacritty config to pickup the changed theme
if [ -f "$HOME/.config/alacritty/alacritty.toml" ]; then
  touch "$HOME/.config/alacritty/alacritty.toml"
fi

# Notify of the new theme
notify-send "Theme changed to $THEME_NAME" -t 2000

echo "Theme '$THEME_NAME' installed and set as current." 