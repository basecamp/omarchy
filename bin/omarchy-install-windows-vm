#!/bin/bash

install_windows() {
  omarchy-pkg-add freerdp openbsd-netcat

  mkdir -p "$HOME/.windows"

  # Install Windows VM icon and desktop file to system

  sudo cp "$OMARCHY_PATH/applications/icons/windows.png" "$HOME/.local/share/applications/icons/windows.png"

  cat << EOF | tee "$HOME/.local/share/applications/windows-vm.desktop" > /dev/null
[Desktop Entry]
Name=Windows
Comment=Start Windows VM via Docker and connect with RDP
Exec=uwsm app -- omarchy-launch-windows-vm
Icon=$HOME/.local/share/applications/icons/windows.png
Terminal=false
Type=Application
Categories=System;Virtualization;
EOF


  # Navigate to docker-compose directory
  SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
  COMPOSE_DIR="$SCRIPT_DIR/../config/windows-vm"

  cd "$COMPOSE_DIR" || {
    echo "Error: Could not change to $COMPOSE_DIR"
    exit 1
  }

  echo ""
  echo "Starting Windows VM installation..."
  echo "This will download a 64GB Windows image and takes 10-15 minutes to install."
  echo ""
  echo "IMPORTANT: You can monitor progress at http://127.0.0.1:8006"
  echo "          If you need to set a Windows product key, edit:"
  echo "          $COMPOSE_DIR/docker-compose.yml"
  echo "          and change the KEY environment variable."
  echo ""
  echo "Opening browser to monitor installation..."

  # Open browser to monitor installation
  (sleep 10 && xdg-open "http://127.0.0.1:8006") &

  # Start docker-compose in background
  docker-compose up &
  COMPOSE_PID=$!

  echo ""
  echo "Windows installation started!"
  echo "Monitor progress at: http://127.0.0.1:8006"
  echo ""
  echo "When Windows desktop is ready and you've completed initial setup:"
  echo "CLOSE THIS WINDOW to finish installation and stop the VM"
  echo "(You can then launch it anytime using the 'Windows VM' application via Launcher)"
  echo ""
  echo "Waiting for window to close..."

  # Set up trap to cleanup when script exits (window closed)
  cleanup() {
    echo "Window closed, stopping Windows VM..."
    cd "$COMPOSE_DIR" 2>/dev/null || true
    docker-compose down 2>/dev/null || true
    exit 0
  }

  trap cleanup EXIT SIGTERM SIGINT

  # Keep the script running until window is closed
  while kill -0 $COMPOSE_PID 2>/dev/null; do
    sleep 5
  done

  # Accept RDP certificate for future connections with xfreerdp3 (before cleanup)
  echo ""
  echo "Accepting RDP certificate for future connections..."
  echo "This will briefly connect to accept the certificate, then disconnect."

  # Wait for RDP to be ready
  while ! nc -z 127.0.0.1 3389; do
    echo "  Waiting for RDP to be ready for certificate acceptance..."
    sleep 5
  done

  # Quick connection to accept certificate using xfreerdp3 with tofu (Trust On First Use)
  timeout 10 xfreerdp3 /u:docker /p:admin /v:127.0.0.1:3389 /size:320x240 /cert:tofu 2>/dev/null || true

  # If docker-compose exits naturally, also cleanup
  cleanup

  echo ""
  echo "Windows VM installation completed!"
  echo "You can now launch it using the 'Windows VM' application or 'omarchy-launch-windows-vm'"
}

remove_windows() {
  echo "Removing Windows VM..."

  SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
  COMPOSE_DIR="$SCRIPT_DIR/../config/windows-vm"

  cd "$COMPOSE_DIR" || {
    echo "Error: Could not change to $COMPOSE_DIR"
    exit 1
  }

  # Stop and remove containers
  echo "Stopping Windows VM containers..."
  docker-compose down

  # Remove the Docker image
  echo "Removing Windows VM Docker image..."
  docker rmi dockurr/windows 2>/dev/null || echo "Image already removed or not found"

  # Remove installed packages
  echo "Removing Windows VM packages..."
  sudo pacman -Rs "${WINDOWS_VM_PACKAGES[@]}" 2>/dev/null || echo "Some packages may already be removed or used by other applications"

  # Remove installed icon and desktop file
  if [ -f /usr/share/pixmaps/windows-vm.png ]; then
    sudo rm /usr/share/pixmaps/windows-vm.png
    echo "Removed Windows VM icon"
  fi

  if [ -f /usr/share/applications/windows-vm.desktop ]; then
    sudo rm ~/.local/share/applications/windows-vm.desktop
    echo "Removed Windows VM desktop application"
  fi

  # Ask if user wants to remove storage directory
  echo ""
  read -p "Do you want to remove the Windows storage directory (~/.windows) and all VM data? [y/N]: " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    rm -rf "$HOME/.windows"
    echo "Windows storage directory removed."
  else
    echo "Windows storage directory kept."
  fi

  echo ""
  echo "Windows VM removal completed!"
}

case "$1" in
""|install)
  install_windows
  ;;
--remove|remove)
  remove_windows
  ;;
*)
  echo "Usage: omarchy-install-windows-vm [install|--remove]" >&2
  exit 1
  ;;
esac
