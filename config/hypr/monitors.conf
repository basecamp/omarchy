# See https://wiki.hyprland.org/Configuring/Monitors/
# List current monitors and resolutions possible: hyprctl monitors
# Format: monitor = [port], resolution, position, scale
# You must relaunch Hyprland after changing any envs (use Super+Esc, then Relaunch)

# Optimized for retina-class 2x displays, like 13" 2.8K, 27" 5K, 32" 6K.
# env = GDK_SCALE,2
# monitor=,preferred,auto,auto

# Good compromise for 27" or 32" 4K monitors (but fractional!)
# env = GDK_SCALE,1.75
# monitor=,preferred,auto,1.666667

# Straight 1x setup for low-resolution displays like 1080p or 1440p
env = GDK_SCALE,1
monitor=eDP-2,preferred,0x0,1
monitor=HDMI-A-1,preferred,-1920x0,1

# env = GDK_SCALE,1
# monitor=,preferred,auto,1

# Example for Framework 13 w/ 6K XDR Apple display
# monitor = DP-5, 6016x3384@60, auto, 2
# monitor = eDP-1, 2880x1920@120, auto, 2

# TIPS:
# Run `hyprctl monitors` to get monitor names and details
# Run `hyprctl clients` to get classes for current windows
# Run `hyprctl workspaces` to get workspaces details for making rules

# Workspace rules for monitor assignments https://wiki.hypr.land/Configuring/Workspace-Rules/
# Workspaces 1-5 always on eDP-2 (main laptop)
# workspace = 1, monitor:eDP-2, persistent:true, on-created-empty:hyprctl dispatch movetoworkspacesilent 1 monitor:eDP-2
# workspace = 1, monitor:eDP-2, default:true, persistent:true
workspace = 1, monitor:HDMI-A-1 # Browser, Couldn't figure out how to get it to stay on monitor 1
workspace = 2, monitor:eDP-2 # 2nd Browser
workspace = 3, monitor:eDP-2 # Editor (VSCode now, Neovim later)
workspace = 4, monitor:eDP-2
workspace = 5, monitor:eDP-2

# Workspaces 6-9 on HDMI-A-1 when connected, fallback to eDP-2
workspace = 6, monitor:eDP-2, persistent:true # Clean/Work Browser
workspace = 7, monitor:HDMI-A-1, persistent:true # AI
workspace = 8, monitor:HDMI-A-1, persistent:true # Browser (on 2nd screen)
workspace = 9, monitor:HDMI-A-1, persistent:true # Chat (X, Discord, Slack)
# workspace = 0, monitor:HDMI-A-1, persistent:true
# on-created-empty:hyprctl dispatch movetoworkspacesilent 0 monitor:eDP-2

# "Smart gaps" / "No gaps when only"
# workspace = w[tv1], gapsout:0, gapsin:0
# workspace = f[1], gapsout:0, gapsin:0
# windowrule = bordersize 0, floating:0, onworkspace:w[tv1]
# windowrule = rounding 0, floating:0, onworkspace:w[tv1]
# windowrule = bordersize 0, floating:0, onworkspace:f[1]
# windowrule = rounding 0, floating:0, onworkspace:f[1]

general {
    gaps_in = 0
    gaps_out = 0

    # Set to true enable resizing windows by clicking and dragging on borders and gaps
    resize_on_border = true
}